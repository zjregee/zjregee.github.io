<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构 on regee&#39;s Blog</title>
    <link>https://zjregee.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 数据结构 on regee&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zjregee.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>lock-free programming</title>
      <link>https://zjregee.github.io/p/lock-free-programming/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zjregee.github.io/p/lock-free-programming/</guid>
      <description>这篇文章将对lock-free编程进行一个简单介绍。
什么是lock-free 维基百科是这样解释的，lock-free的同义词是Non-blocking algorithm。
In computer science, an algorithm is called non-blocking if failure or suspension of any thread cannot cause failure or suspension of another thread; for some operations, these algorithms provide a useful alternative to traditional blocking implementations. A non-blocking algorithm is lock-free if there is guaranteed system-wide progress, and wait-free if there is also guaranteed per-thread progress. &amp;ldquo;Non-blocking&amp;rdquo; was used as a synonym for &amp;ldquo;lock-free&amp;rdquo; in the literature until the introduction of obstruction-freedom in 2003.</description>
    </item>
    
  </channel>
</rss>
